include:
  - project: "dep/library/ci-library"
    ref: production
    file: "main.yml"

variables:
  PROJ_FILE_PATH: "package.json"
  AZURE_SWA_OUTPUT_PATH: ./dist
  ENABLE_SBOM_BINARY: "true"
  OAUTH_PROXY_IMAGE_TAG: "v7-update1"
  # disabled by default, to avoid issues when not defined
  ENABLE_OAUTH_PROXY: "false"

build-image-oauth2-proxy:
  extends: build-image
  variables:
    DOCKERFILE_PATH: "oauth2-proxy/Dockerfile"
    IMAGE_TAG_TO_BUILD: "${OAUTH_PROXY_IMAGE_TAG}"
  script:
    - mkdir oauth2-proxy/certs
    - CopyCertsToDirectory "oauth2-proxy/certs"
    - !reference [.build-image, script]
  rules:
    # include the job depending on some conditions
    - if: '$ENABLE_OAUTH_PROXY == "true" && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      exists:
        - "oauth2-proxy/Dockerfile"

build-application:
  extends: .job-with-web-requests
  image: ${CI_REGISTRY}/dep/library/project-oci-images/build-vuejs-node-v20:20.14.0-alpine3.20
  script:
    - cd "${PROJECT_ROOT_DIR}"
    # Build application
    - npm ci
    - npm run build
  cache:
    # cache node_modules & dist folders for pipeline performances
    policy: pull-push
    untracked: false
    paths:
      - $PROJECT_ROOT_DIR/node_modules/
      - $PROJECT_ROOT_DIR/dist/
  artifacts:
    paths:
      - $PROJECT_ROOT_DIR/dist/
      - $PROJECT_ROOT_DIR/node_modules/

.test-application:
  extends: .job-with-web-requests

test-application:
  extends: .test-application
  image: !reference [build-application, image]
  script:
    - cd "${PROJECT_ROOT_DIR}"
    # Run tests
    - npm link @vue/cli
    - npm run coverage
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  # need to explicitly set the same paths: as for the build-application (and same dependencies) for it to work
  cache:
    paths:
      - $PROJECT_ROOT_DIR/node_modules/
      - $PROJECT_ROOT_DIR/dist/
    policy: pull
  artifacts:
    when: always
    paths:
      - $PROJECT_ROOT_DIR/coverage/
      - $PROJECT_ROOT_DIR/node_modules/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $PROJECT_ROOT_DIR/coverage/cobertura-coverage.xml

sbom-binary:
  variables:
    SBOM_BINARY_FS: "true"

upload-artifact:
  extends: .job-with-web-requests
  image: !reference [build-application, image]
  variables:
    UPLOAD_ARTIFACT_USERNAME: $CI_DEPLOY_USER
    UPLOAD_ARTIFACT_PASSWORD: $CI_DEPLOY_PASSWORD
  script:
    - cd "${PROJECT_ROOT_DIR}"
    - npm config set registry "$UPLOAD_RELEASES_REPO_URL"
    - npm config set _auth "$(echo -n ${UPLOAD_ARTIFACT_USERNAME}:${UPLOAD_ARTIFACT_PASSWORD} | base64 -w 0)"
    - npm config fix
    - npm publish --registry="$UPLOAD_RELEASES_REPO_URL"
  rules:
    - if: '$UPLOAD_ARTIFACT_USERNAME && $UPLOAD_ARTIFACT_PASSWORD && $UPLOAD_RELEASES_REPO_URL'
